// Generated by jit_embed. Do not edit.
#include "mlx/backend/metal/jit/includes.h"
namespace mlx::core::metal {

const char* utils() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* unary_ops() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* binary_ops() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* ternary_ops() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* arange() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* unary() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* binary() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* binary_two() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* copy() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* fft() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* logsumexp() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* softmax() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* scan() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* sort() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* reduce() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* quantized_utils() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* quantized() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* fp4_quantized() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* gather_axis() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* gather_front() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* gemv_masked() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* conv() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* steel_conv() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* steel_conv_general() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* steel_gemm_fused() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* steel_gemm_masked() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* steel_gemm_splitk() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* steel_gemm_gather() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

const char* steel_gemm_segmented() {
  static const char* s = R"MLX_RAW()MLX_RAW";
  return s;
}

} // namespace mlx::core::metal
